# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ncats.translator.ontology.server.openapi_server.model.base_model_ import Model
from ncats.translator.ontology.server.openapi_server.model.computation_id import ComputationId
from ncats.translator.ontology.server.openapi_server import util

from ncats.translator.ontology.server.openapi_server.model.computation_id import ComputationId  # noqa: E501


class ComputationIdentifier(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, computation_id=None):  # noqa: E501
        """ComputationIdentifier - a model defined in OpenAPI

        :param computation_id: The computation_id of this ComputationIdentifier.  # noqa: E501
        :type computation_id: ComputationId
        """
        self.openapi_types = {
            'computation_id': ComputationId
        }

        self.attribute_map = {
            'computation_id': 'computation_id'
        }

        self._computation_id = computation_id

    @classmethod
    def from_dict(cls, dikt) -> 'ComputationIdentifier':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ComputationIdentifier of this ComputationIdentifier.  # noqa: E501
        :rtype: ComputationIdentifier
        """
        return util.deserialize_model(dikt, cls)

    @property
    def computation_id(self):
        """Gets the computation_id of this ComputationIdentifier.


        :return: The computation_id of this ComputationIdentifier.
        :rtype: ComputationId
        """
        return self._computation_id

    @computation_id.setter
    def computation_id(self, computation_id):
        """Sets the computation_id of this ComputationIdentifier.


        :param computation_id: The computation_id of this ComputationIdentifier.
        :type computation_id: ComputationId
        """

        self._computation_id = computation_id
